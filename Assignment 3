{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 272
        },
        "id": "itQQRM7bRqni",
        "outputId": "6fdfd81a-baee-4049-ccbc-9d05fa276312"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "data1=pd.read_csv(\"wtd.csv\")\n",
        "data1.head()\n",
        "columns= data1.columns\n",
        "data1.iloc[:,0]\n",
        "import seaborn as sns\n",
        "sns.heatmap(data1.corr());"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1.iloc[:,0]=data1.iloc[:,0].astype('category')\n",
        "data1.iloc[:,0]=data1.iloc[:,0].cat.codes"
      ],
      "metadata": {
        "id": "Nd2sk3zkWR1D"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data1 = data1.replace('?',0)"
      ],
      "metadata": {
        "id": "LPC_xWvbWU2T"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = StandardScaler()\n",
        "data1 = scaler.fit_transform(data)"
      ],
      "metadata": {
        "id": "p8wFKdbeWVZ1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iXyHqNPSWXWT",
        "outputId": "fb5de6a6-461a-4fc6-e61d-0a471ccf2cff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[-1.68275448,  0.86754314, -0.30808658, ...,  0.2803088 ,\n",
              "        -0.02302   ,  0.26748153],\n",
              "       [-0.42726188,  0.32684151,  0.23840156, ...,  0.28566146,\n",
              "         0.33011148,  0.28435117],\n",
              "       [ 1.08458785, -0.39682751,  0.96705241, ...,  0.087613  ,\n",
              "         0.07997669,  0.22109   ],\n",
              "       ...,\n",
              "       [ 0.65732597, -0.32302286, -0.74527709, ...,  0.1571976 ,\n",
              "         0.0946905 ,  0.24217706],\n",
              "       [ 0.76907138, -0.40098102, -0.74527709, ...,  0.68711103,\n",
              "         0.13883193,  0.27591635],\n",
              "       [ 0.97284243, -0.5822444 , -0.77806637, ...,  0.40342   ,\n",
              "        -0.08923215, -3.9330604 ]])"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model = KMeans(n_clusters=5)\n",
        "model.fit(data1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c0CHVvjaWXZC",
        "outputId": "801bcce1-44cd-4ca5-be55-7404e9dd655a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KMeans(n_clusters=5)"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import KMeans\n",
        "wcss = [] # within cluster sum of squares\n",
        "\n",
        "for k in range(1, 15):\n",
        "    kmeansForLoop = KMeans(n_clusters = k)\n",
        "    kmeansForLoop.fit(data1)\n",
        "    wcss.append(kmeansForLoop.inertia_)\n",
        "\n",
        "plt.figure(figsize = (10, 10))\n",
        "plt.plot(range(1, 15), wcss)\n",
        "plt.xlabel(\"K value\")\n",
        "plt.ylabel(\"WCSS\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 611
        },
        "id": "0QxSGxQHWXbs",
        "outputId": "511f853d-44d4-484f-c3b0-79af1f97af78"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import silhouette_score\n",
        "silhouette_scores = [] \n",
        "\n",
        "for n_cluster in range(2,15):\n",
        "    silhouette_scores.append( \n",
        "        silhouette_score(data1, KMeans(n_clusters = n_cluster).fit_predict(data1))) \n",
        "    \n",
        "# Plotting a bar graph to compare the results \n",
        "k = [2, 3, 4, 5, 6,7,8,9,10,11,12,13,14] \n",
        "plt.bar(k, silhouette_scores) \n",
        "plt.xlabel('Number of clusters', fontsize = 10) \n",
        "plt.ylabel('Silhouette Score', fontsize = 10) \n",
        "plt.grid()\n",
        "plt.show() "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "9B_PBRCWWXei",
        "outputId": "bc3fb0ed-c14f-41ee-ae9b-c8beeda2983b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "best_model = KMeans(n_clusters=2)\n",
        "best_model.fit(data1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JeG3BbgjWXhP",
        "outputId": "e2e936d9-860e-40dd-8489-dbd8fd7cad82"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KMeans(n_clusters=2)"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "label = best_model.fit_predict(data1)"
      ],
      "metadata": {
        "id": "TKBbnVdTWXj9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "label_0 = data1[label == 0]\n",
        "label_1 = data1[label == 1]"
      ],
      "metadata": {
        "id": "pggyLuJEWXml"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.cluster import AgglomerativeClustering\n",
        "hc = AgglomerativeClustering(n_clusters = 2, affinity = \"euclidean\", linkage = \"ward\")\n",
        "cluster = hc.fit_predict(data1)\n",
        "data1[\"label\"] = cluster"
      ],
      "metadata": {
        "id": "8tKCkzZYWXpN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data1.label.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bfh862VuW5XJ",
        "outputId": "03bbdd1d-ce3b-4967-ce0f-40fe7686fb28"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    506\n",
              "1     21\n",
              "Name: label, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from scipy.cluster.hierarchy import linkage,dendrogram\n",
        "merg = linkage(data, method = \"ward\")\n",
        "dendrogram(merg, leaf_rotation = 90)\n",
        "plt.xlabel(\"data points\")\n",
        "plt.ylabel(\"euclidean distance\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 284
        },
        "id": "sSMxr6zdW5aC",
        "outputId": "7f026049-ed90-432d-dc29-e86e8f889268"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "id": "6NLU6t6YW5g3",
        "outputId": "e618a762-8b7c-42fb-d8c0-d8be1c6dd963"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Unnamed: 0    Q-E ZN-E  PH-E DBO-E DQO-E SS-E SSV-E SED-E  COND-E  ...  \\\n",
              "0           7  44101  1.5   7.8     0   407  166  66.3   4.5    2110  ...   \n",
              "1         198  39024    3   7.7     0   443  214  69.2   6.5    2660  ...   \n",
              "2         428  32229    5   7.6     0   528  186  69.9   3.4    1666  ...   \n",
              "3         444  35023  3.5   7.9   205   588  192  65.6   4.5    2430  ...   \n",
              "4         462  36924  1.5   8.0   242   496  176  64.8     4    2110  ...   \n",
              "\n",
              "   RD-DBO-P RD-SS-P  RD-SED-P RD-DBO-S RD-DQO-S  RD-DBO-G  RD-DQO-G RD-SS-G  \\\n",
              "0         0    58.8      95.5        0       70         0      79.4    87.3   \n",
              "1         0    60.7      94.8        0     80.8         0      79.5    92.1   \n",
              "2         0    58.2      95.6        0     52.9         0      75.8    88.7   \n",
              "3      33.1    64.2      95.3     87.3     72.3      90.2      82.3    89.6   \n",
              "4         0    62.7      95.6        0       71      92.1      78.2    87.5   \n",
              "\n",
              "  RD-SED-G label  \n",
              "0     99.6     0  \n",
              "1      100     0  \n",
              "2     98.5     0  \n",
              "3      100     0  \n",
              "4     99.5     0  \n",
              "\n",
              "[5 rows x 40 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4d2b052e-8531-4808-9a85-386968bb5752\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>Q-E</th>\n",
              "      <th>ZN-E</th>\n",
              "      <th>PH-E</th>\n",
              "      <th>DBO-E</th>\n",
              "      <th>DQO-E</th>\n",
              "      <th>SS-E</th>\n",
              "      <th>SSV-E</th>\n",
              "      <th>SED-E</th>\n",
              "      <th>COND-E</th>\n",
              "      <th>...</th>\n",
              "      <th>RD-DBO-P</th>\n",
              "      <th>RD-SS-P</th>\n",
              "      <th>RD-SED-P</th>\n",
              "      <th>RD-DBO-S</th>\n",
              "      <th>RD-DQO-S</th>\n",
              "      <th>RD-DBO-G</th>\n",
              "      <th>RD-DQO-G</th>\n",
              "      <th>RD-SS-G</th>\n",
              "      <th>RD-SED-G</th>\n",
              "      <th>label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7</td>\n",
              "      <td>44101</td>\n",
              "      <td>1.5</td>\n",
              "      <td>7.8</td>\n",
              "      <td>0</td>\n",
              "      <td>407</td>\n",
              "      <td>166</td>\n",
              "      <td>66.3</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2110</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>58.8</td>\n",
              "      <td>95.5</td>\n",
              "      <td>0</td>\n",
              "      <td>70</td>\n",
              "      <td>0</td>\n",
              "      <td>79.4</td>\n",
              "      <td>87.3</td>\n",
              "      <td>99.6</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>198</td>\n",
              "      <td>39024</td>\n",
              "      <td>3</td>\n",
              "      <td>7.7</td>\n",
              "      <td>0</td>\n",
              "      <td>443</td>\n",
              "      <td>214</td>\n",
              "      <td>69.2</td>\n",
              "      <td>6.5</td>\n",
              "      <td>2660</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>60.7</td>\n",
              "      <td>94.8</td>\n",
              "      <td>0</td>\n",
              "      <td>80.8</td>\n",
              "      <td>0</td>\n",
              "      <td>79.5</td>\n",
              "      <td>92.1</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>428</td>\n",
              "      <td>32229</td>\n",
              "      <td>5</td>\n",
              "      <td>7.6</td>\n",
              "      <td>0</td>\n",
              "      <td>528</td>\n",
              "      <td>186</td>\n",
              "      <td>69.9</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1666</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>58.2</td>\n",
              "      <td>95.6</td>\n",
              "      <td>0</td>\n",
              "      <td>52.9</td>\n",
              "      <td>0</td>\n",
              "      <td>75.8</td>\n",
              "      <td>88.7</td>\n",
              "      <td>98.5</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>444</td>\n",
              "      <td>35023</td>\n",
              "      <td>3.5</td>\n",
              "      <td>7.9</td>\n",
              "      <td>205</td>\n",
              "      <td>588</td>\n",
              "      <td>192</td>\n",
              "      <td>65.6</td>\n",
              "      <td>4.5</td>\n",
              "      <td>2430</td>\n",
              "      <td>...</td>\n",
              "      <td>33.1</td>\n",
              "      <td>64.2</td>\n",
              "      <td>95.3</td>\n",
              "      <td>87.3</td>\n",
              "      <td>72.3</td>\n",
              "      <td>90.2</td>\n",
              "      <td>82.3</td>\n",
              "      <td>89.6</td>\n",
              "      <td>100</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>462</td>\n",
              "      <td>36924</td>\n",
              "      <td>1.5</td>\n",
              "      <td>8.0</td>\n",
              "      <td>242</td>\n",
              "      <td>496</td>\n",
              "      <td>176</td>\n",
              "      <td>64.8</td>\n",
              "      <td>4</td>\n",
              "      <td>2110</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>62.7</td>\n",
              "      <td>95.6</td>\n",
              "      <td>0</td>\n",
              "      <td>71</td>\n",
              "      <td>92.1</td>\n",
              "      <td>78.2</td>\n",
              "      <td>87.5</td>\n",
              "      <td>99.5</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 40 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4d2b052e-8531-4808-9a85-386968bb5752')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4d2b052e-8531-4808-9a85-386968bb5752 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4d2b052e-8531-4808-9a85-386968bb5752');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data1.to_excel('out.xlsx')"
      ],
      "metadata": {
        "id": "BQNVCdcpW5jq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data1['30 RD-DBO-P (performance input Biological demand of oxygen in primary settler)'].describe()"
      ],
      "metadata": {
        "id": "CAuwMh_1W5ol"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "Q7hIOijbW5ra"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "ngogok1lW5tt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "zLdea34xW5xd"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}